#[gcode_macro CLEAR_BED] 
#gcode:
#    G0 X150 Y220 Z5 F300 ; Set feed rate for the slow movement
#    G0 X150 Y10 Z5 F300 ; Reset the X-axis offset
    
#[gcode_macro BED_MESH_CALIBRATE]
#rename_existing: BTT_BED_MESH_CALIBRATE
#gcode:
#  SET_GCODE_VARIABLE MACRO=_KNOMI_STATUS VARIABLE=probing VALUE=True
#  BTT_BED_MESH_CALIBRATE {rawparams}
#  SET_GCODE_VARIABLE MACRO=_KNOMI_STATUS VARIABLE=probing VALUE=False

#[gcode_macro SCREWS_CALCULATE]
#gcode:
#    SCREWS_TILT_CALCULATE 
[gcode_macro _KNOMI_STATUS]
variable_homing: False
variable_probing: False
variable_qgling: False
variable_heating_nozzle: False
variable_heating_bed: False
gcode:

[gcode_macro M109]
rename_existing: M109.1
gcode:
 SET_GCODE_VARIABLE MACRO=_KNOMI_STATUS VARIABLE=heating_nozzle VALUE=True
 M109.1 {rawparams}
 SET_GCODE_VARIABLE MACRO=_KNOMI_STATUS VARIABLE=heating_nozzle VALUE=False

[gcode_macro M190]
rename_existing: M190.1
gcode:
 SET_GCODE_VARIABLE MACRO=_KNOMI_STATUS VARIABLE=heating_bed VALUE=True
 M190.1 {rawparams}
 SET_GCODE_VARIABLE MACRO=_KNOMI_STATUS VARIABLE=heating_bed VALUE=False
[gcode_macro START_PRINT]
gcode:
    {% set BED_TEMP = params.BED_TEMP|default(60)|float %}
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(190)|float %}
    # Start bed heating
    STOP_LED_EFFECTS
    M140 S{BED_TEMP}
    led_heating
    #SET_LED_EFFECT EFFECT:bed_effects
    #SET_LED LED=neo RED=0.9 GREEN=0.0 BLUE=0.0 WHITE=0.0
    M104 S150
    G4 S10

    # Use absolute coordinates
    G90
    # Reset the G-Code Z offset (adjust Z offset if needed)
    #SET_GCODE_OFFSET Z=0.0
    # Home the printer
    G28
    
    # Move the nozzle near the bed
    G1 Z25 F240
    # Move the nozzle very close to the bed
    G1 X2 Y10  F3000
    # Wait for bed to reach temperature
    M190 S{BED_TEMP}
    #SET_LED LED=neo RED=0.9 GREEN=0.9 BLUE=0.0 WHITE=0.0
    ledparty_time
    #SET_LED_EFFECT EFFECT:pixel_barf REPLACE=1
    BED_MESH_CALIBRATE ADAPTIVE=1
    #SET_LED LED=neo RED=0.0 GREEN=0.9 BLUE=0.0 WHITE=0.0
    SMART_PARK
    # Set and wait for nozzle to reach temperature
    STOP_LED_EFFECTS
    M109 S{EXTRUDER_TEMP}
    led_printing
    #SET_LED LED=neo RED=0.0 GREEN=0.0 BLUE=0.0 WHITE=0.7
    LINE_PURGE

[gcode_macro START_PRINTNOPURGE]
gcode:
    {% set BED_TEMP = params.BED_TEMP|default(60)|float %}
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(190)|float %}
    STOP_LED_EFFECTS
    # Start bed heating
    M140 S{BED_TEMP}
    SET_LED LED=neo RED=0.9 GREEN=0.0 BLUE=0.0 WHITE=0.0
    M104 S150
    G4 S10

    # Use absolute coordinates
    G90
    # Reset the G-Code Z offset (adjust Z offset if needed)
    #SET_GCODE_OFFSET Z=0.0
    # Home the printer
    G28
    # Move the nozzle near the bed
    G1 Z25 F240
    # Move the nozzle very close to the bed
    G1 X2 Y10  F3000
    # Wait for bed to reach temperature
    M190 S{BED_TEMP}
    SET_LED LED=neo RED=0.9 GREEN=0.9 BLUE=0.0 WHITE=0.0
    BED_MESH_CALIBRATE ADAPTIVE=1
    SET_LED LED=neo RED=0.0 GREEN=0.9 BLUE=0.0 WHITE=0.0
    SMART_PARK
    # Set and wait for nozzle to reach temperature
    M109 S{EXTRUDER_TEMP}
    SET_LED LED=neo RED=0.0 GREEN=0.0 BLUE=0.0 WHITE=0.7
   
[gcode_macro CLEAR_PRINT]
gcode:
    M140 S0
    M104 S0
    M106 S0
    G91
    G1 X-2 Y-2 E-3 F300
    G1 Z10 F3000
    G90
    G1 X110 Y220 F3000
    G1 Z2
    LED_OFF
    #G4 P30000 
    #G4 P600000
    TEMPERATURE_WAIT SENSOR=heater_bed MAXIMUM=30
    G1 X110 Y10 F7000
    G1 X110 Y220
    G1 X110 Y10
    G1 X110 Y220
    G1 X50 Y220
    G1 X50 Y10
    G1 X50 Y220
    G1 X200 Y220
    G1 X200 Y10
    G1 X110 Y110
    G1 Z40
    M84
    
[gcode_macro END_PRINT]
gcode:
    # Turn off bed, extruder, and fan
    M140 S0
    M104 S0
    M106 S0
    # Move nozzle away from print while retracting
    G91
    G1 X-2 Y-2 E-3 F300
    # Raise nozzle by 10mm
    G1 Z10 F3000
    G90
    G1 X5 Y200 F21000
    G90
    # Disable steppers
    M84
    LED_OFF

#[gcode_macro G28]
#rename_existing: G28.1
#gcode:
# SET_GCODE_VARIABLE MACRO=_KNOMI_STATUS VARIABLE=homing VALUE=True
# G28.1 {rawparams}
# SET_GCODE_VARIABLE MACRO=_KNOMI_STATUS VARIABLE=homing VALUE=False
[gcode_macro TEST_SPEED]
# Home, get position, throw around toolhead, home again.
# If MCU stepper positions (first line in GET_POSITION) are greater than a full step different (your number of microsteps), then skipping occured.
# We only measure to a full step to accomodate for endstop variance.
# Example: TEST_SPEED SPEED=300 ACCEL=5000 ITERATIONS=10

description: Test for max speed and acceleration parameters for the printer. Procedure: Home -> ReadPositionFromMCU -> MovesToolhead@Vel&Accel -> Home -> ReadPositionfromMCU

gcode:
    # Speed
    {% set speed  = params.SPEED|default(printer.configfile.settings.printer.max_velocity)|int %}
    # Iterations
    {% set iterations = params.ITERATIONS|default(5)|int %}
    # Acceleration
    {% set accel  = params.ACCEL|default(printer.configfile.settings.printer.max_accel)|int %}
    # Minimum Cruise Ratio
    {% set min_cruise_ratio = params.MIN_CRUISE_RATIO|default(0.5)|float %}
    # Bounding inset for large pattern (helps prevent slamming the toolhead into the sides after small skips, and helps to account for machines with imperfectly set dimensions)
    {% set bound = params.BOUND|default(20)|int %}
    # Size for small pattern box
    {% set smallpatternsize = SMALLPATTERNSIZE|default(20)|int %}
    
    # Large pattern
        # Max positions, inset by BOUND
        {% set x_min = printer.toolhead.axis_minimum.x + bound %}
        {% set x_max = printer.toolhead.axis_maximum.x - bound %}
        {% set y_min = printer.toolhead.axis_minimum.y + bound %}
        {% set y_max = printer.toolhead.axis_maximum.y - bound %}
    
    # Small pattern at center
        # Find X/Y center point
        {% set x_center = (printer.toolhead.axis_minimum.x|float + printer.toolhead.axis_maximum.x|float ) / 2 %}
        {% set y_center = (printer.toolhead.axis_minimum.y|float + printer.toolhead.axis_maximum.y|float ) / 2 %}
        
        # Set small pattern box around center point
        {% set x_center_min = x_center - (smallpatternsize/2) %}
        {% set x_center_max = x_center + (smallpatternsize/2) %}
        {% set y_center_min = y_center - (smallpatternsize/2) %}
        {% set y_center_max = y_center + (smallpatternsize/2) %}

    # Save current gcode state (absolute/relative, etc)
    SAVE_GCODE_STATE NAME=TEST_SPEED
    
    # Output parameters to g-code terminal
    { action_respond_info("TEST_SPEED: starting %d iterations at speed %d, accel %d" % (iterations, speed, accel)) }
    
    # Home and get position for comparison later:
        M400 # Finish moves - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/66
        G28
        # QGL if not already QGLd (only if QGL section exists in config)
        {% if printer.configfile.settings.quad_gantry_level %}
            {% if printer.quad_gantry_level.applied == False %}
                QUAD_GANTRY_LEVEL
                G28 Z
            {% endif %}
        {% endif %} 
        # Move 50mm away from max position and home again (to help with hall effect endstop accuracy - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/24)
        G90
        G1 X{printer.toolhead.axis_maximum.x-50} Y{printer.toolhead.axis_maximum.y-50} F{30*60}
        M400 # Finish moves - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/66
        G28 X Y
        G0 X{printer.toolhead.axis_maximum.x-1} Y{printer.toolhead.axis_maximum.y-1} F{30*60}
        G4 P1000 
        GET_POSITION

    # Go to starting position
    G0 X{x_min} Y{y_min} Z{bound + 10} F{speed*60}

    # Set new limits
    {% if printer.configfile.settings.printer.minimum_cruise_ratio is defined %}
        SET_VELOCITY_LIMIT VELOCITY={speed} ACCEL={accel} MINIMUM_CRUISE_RATIO={min_cruise_ratio}
    {% else %}
        SET_VELOCITY_LIMIT VELOCITY={speed} ACCEL={accel} ACCEL_TO_DECEL={accel / 2}
    {% endif %}

    {% for i in range(iterations) %}
        # Large pattern diagonals
        G0 X{x_min} Y{y_min} F{speed*60}
        G0 X{x_max} Y{y_max} F{speed*60}
        G0 X{x_min} Y{y_min} F{speed*60}
        G0 X{x_max} Y{y_min} F{speed*60}
        G0 X{x_min} Y{y_max} F{speed*60}
        G0 X{x_max} Y{y_min} F{speed*60}
        
        # Large pattern box
        G0 X{x_min} Y{y_min} F{speed*60}
        G0 X{x_min} Y{y_max} F{speed*60}
        G0 X{x_max} Y{y_max} F{speed*60}
        G0 X{x_max} Y{y_min} F{speed*60}
    
        # Small pattern diagonals
        G0 X{x_center_min} Y{y_center_min} F{speed*60}
        G0 X{x_center_max} Y{y_center_max} F{speed*60}
        G0 X{x_center_min} Y{y_center_min} F{speed*60}
        G0 X{x_center_max} Y{y_center_min} F{speed*60}
        G0 X{x_center_min} Y{y_center_max} F{speed*60}
        G0 X{x_center_max} Y{y_center_min} F{speed*60}
        
        # Small pattern box
        G0 X{x_center_min} Y{y_center_min} F{speed*60}
        G0 X{x_center_min} Y{y_center_max} F{speed*60}
        G0 X{x_center_max} Y{y_center_max} F{speed*60}
        G0 X{x_center_max} Y{y_center_min} F{speed*60}
    {% endfor %}

    # Restore max speed/accel/accel_to_decel to their configured values
    {% if printer.configfile.settings.printer.minimum_cruise_ratio is defined %}
        SET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} ACCEL={printer.configfile.settings.printer.max_accel} MINIMUM_CRUISE_RATIO={printer.configfile.settings.printer.minimum_cruise_ratio} 
    {% else %}
        SET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} ACCEL={printer.configfile.settings.printer.max_accel} ACCEL_TO_DECEL={printer.configfile.settings.printer.max_accel_to_decel}
    {% endif %}

    # Re-home and get position again for comparison:
        M400 # Finish moves - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/66
        G28 # This is a full G28 to fix an issue with CoreXZ - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/12
        # Go to XY home positions (in case your homing override leaves it elsewhere)
        G90
        G0 X{printer.toolhead.axis_maximum.x-1} Y{printer.toolhead.axis_maximum.y-1} F{30*60}
        G4 P1000 
        GET_POSITION

    # Restore previous gcode state (absolute/relative, etc)
    RESTORE_GCODE_STATE NAME=TEST_SPEED


[led_effect panel_idle]
autostart:              true
frame_rate:             24
leds:
    neopixel:neo
layers:
    breathing  10 1 top (.5,.5,1,0)
[led_effect bed_heating]
autostart: false
frame_rate: 24
heater: heater_bed
leds:
  neopixel:neo
layers:
  heater 60 0 add (1.0,0.0,0.0,0.0),(0.0,1.0,0.0,0.0)

[led_effect pixel_barf]
frame_rate:24
leds:
  neopixel:neo
layers:
  pattern .1 1 add (1.0,0.0,0.0,0.0),(0.0,1.0,0.0,0.0),(0.0,0.0,1.0,0.0)

[led_effect bed_effects]
leds:
    neopixel:neo
autostart:                          false
frame_rate:                         24
heater:                             heater_bed
layers:
    heater  50 0 add    (1,1,0),(1,0,0)
    static  0  0 top    (1,0,0)
[led_effect probe_flash]
autostart:              true
frame_rate:             24
leds:
    neopixel:neo
endstops:
    x, y, z, probe
layers:
    homing        2.5    0    add      (0.3, 0.3, 0.4, 0.3)

[led_effect logo_heating]
leds: 
	neopixel:neo
autostart: false
frame_rate: 24
heater: extruder
layers:
#	heaterfire 20 1 add (0,0,0.5),(0.5,0,1.0),(0.5,0,0),(1.0,0.5,0.25),(1.0,1.0,0) 
#    heater 150 0 add (0,0,0.5),(0.5,0,1.0),(0.5,0,0),(1.0,0.5,0.25),(1.0,1.0,0)

    # FLIR Ironbow gradient
    static 0 0 subtract (0.5,0.5,0.5)
    heaterfire 20 1 add (0.97,0.99,0.59),(0.92,0.27,0.31),(0.98,0.71,0.00),(0.69,0.04,0.58),(0.08,0.02,0.35) 
    heater 150 0 add  (0,0,0.5),(0.84,0.84,0)

[gcode_macro led_heating]
gcode:
	STOP_LED_EFFECTS ;cancel all others
    SET_LED_EFFECT EFFECT=logo_heating

[gcode_macro ledpixel_barf]
gcode:
    STOP_LED_EFFECTS
    SET_LED_EFFECT EFFECT=pixel_barf
[led_effect logo_party_time]
leds:
    neopixel:neo
autostart: false
frame_rate: 24
layers:
    gradient 1 1 add (0.07,0,0),(0,0.07,0),(0,0,0.07) 

[gcode_macro ledparty_time]
gcode:
    STOP_LED_EFFECTS
    SET_LED_EFFECT EFFECT=logo_party_time

[led_effect led_printing]
leds: 
	neopixel:neo
autostart: false
frame_rate: 24
layers:
	static 0 0 add (0.0,0.0,0.0,0.7)

[gcode_macro led_printing]
gcode:
    STOP_LED_EFFECTS
    SET_LED_EFFECT EFFECT=led_printing

[led_effect logo_purge]
leds:
    neopixel:neo
autostart: false
frame_rate: 24
layers:
    linearfade 0.75 1.00 top (0.7,0,1.0),(0.25,0.00,0.44) 

[gcode_macro led_purge]
gcode:
    STOP_LED_EFFECTS
    SET_LED_EFFECT EFFECT=logo_purge